import{_ as s,c as a,a as t,e as l,d as e,w as i,r,o as d}from"./app-CrEJ5uQ_.js";const u="/node-red-contrib-home-assistant-websocket/assets/index_import_screenshot-B6IPVgb8.png",m={};function k(f,o){const n=r("RouteLink");return d(),a("div",null,[o[23]||(o[23]=t("h1",{id:"cookbook",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#cookbook"},[t("span",null,"Cookbook")])],-1)),o[24]||(o[24]=t("p",null,"Here is a collection of beginner to advanced flows and explanations to help you further educate yourself in the world of Home Automation with Node-RED.",-1)),t("ul",null,[t("li",null,[o[7]||(o[7]=l("JSONata Examples ",-1)),t("ul",null,[t("li",null,[e(n,{to:"/cookbook/jsonata/action.html"},{default:i(()=>[...o[0]||(o[0]=[l("Action node",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/jsonata/change-node.html"},{default:i(()=>[...o[1]||(o[1]=[l("Change Node",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/jsonata/events-state.html"},{default:i(()=>[...o[2]||(o[2]=[l("Events: state node",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/jsonata/functions.html"},{default:i(()=>[...o[3]||(o[3]=[l("Functions",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/jsonata/sensor.html"},{default:i(()=>[...o[4]||(o[4]=[l("Sensor Node",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/jsonata/switch-node.html"},{default:i(()=>[...o[5]||(o[5]=[l("Switch Node",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/jsonata/trigger-state.html"},{default:i(()=>[...o[6]||(o[6]=[l("Trigger state node",-1)])]),_:1})])])]),t("li",null,[e(n,{to:"/cookbook/motion-triggered-light.html"},{default:i(()=>[...o[8]||(o[8]=[l("Motion Triggered Light",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/saving-and-restoring-states.html"},{default:i(()=>[...o[9]||(o[9]=[l("Saving and Restoring States",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/get-state_changed-events-based-on-area.html"},{default:i(()=>[...o[10]||(o[10]=[l("Get state_changed Events Based on Area",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/sun-events.html"},{default:i(()=>[...o[11]||(o[11]=[l("Turn Light On/Off with Sunset/Sunrise",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/vacation-mode.html"},{default:i(()=>[...o[12]||(o[12]=[l("Vacation Mode",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/expiration-date-monitor.html"},{default:i(()=>[...o[13]||(o[13]=[l("Expiration Date Monitor",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/using-date-and-time-entities-to-trigger-flows.html"},{default:i(()=>[...o[14]||(o[14]=[l("Using date and time entities to trigger flows",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/check-if-an-entity-was-turned-on-in-the-last-24-hours.html"},{default:i(()=>[...o[15]||(o[15]=[l("Check if an entity was a certain state in the last 24 hours",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/starting-flow-after-home-assistant-restart.html"},{default:i(()=>[...o[16]||(o[16]=[l("Starting flow after Home Assistant restart",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/holiday-lights-scheduler-and-demo-mode-for-wled.html"},{default:i(()=>[...o[17]||(o[17]=[l("Holiday lights scheduler and demo mode for WLED",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/actionable-notifications-subflow-for-android.html"},{default:i(()=>[...o[18]||(o[18]=[l("Actionable Notifications Subflow for Android",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/events-by-label.html"},{default:i(()=>[...o[19]||(o[19]=[l("Events by Label",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/play-jellyfin-show-using-sentence-node.html"},{default:i(()=>[...o[20]||(o[20]=[l("Play Jellyfin Show using the Sentence Node",-1)])]),_:1})]),t("li",null,[e(n,{to:"/cookbook/xfinity/"},{default:i(()=>[...o[21]||(o[21]=[l("Xfinity Usage",-1)])]),_:1}),o[22]||(o[22]=l(" - Create sensors from dynamic data",-1))])]),o[25]||(o[25]=t("p",null,"All JSON exports are also available under the examples tab in the Node-RED import menu.",-1)),o[26]||(o[26]=t("p",null,[t("img",{src:u,alt:"screenshot"})],-1)),o[27]||(o[27]=t("p",null,[t("strong",null,"Also see:")],-1)),o[28]||(o[28]=t("ul",null,[t("li",null,[t("a",{href:"https://nodered.org/docs/user-guide/editor/workspace/import-export",target:"_blank",rel:"noopener noreferrer"},"Importing and Exporting Flows")])],-1))])}const g=s(m,[["render",k],["__file","index.html.vue"]]),p=JSON.parse('{"path":"/cookbook/","title":"Cookbook","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1728795362000,"contributors":[{"name":"jason","email":"37859597+zachowj@users.noreply.github.com","commits":3},{"name":"Jason","email":"37859597+zachowj@users.noreply.github.com","commits":2}]},"filePathRelative":"cookbook/index.md"}');export{g as comp,p as data};
