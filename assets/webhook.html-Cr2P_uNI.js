import{_ as a,c as l,b as i,a as o,e as t,d as n,r as d,o as r}from"./app-CrEJ5uQ_.js";const h={},c={id:"id",tabindex:"-1"},u={class:"header-anchor",href:"#id"},p={id:"allowed-methods",tabindex:"-1"},m={class:"header-anchor",href:"#allowed-methods"};function f(g,e){const s=d("Badge");return r(),l("div",null,[e[2]||(e[2]=i('<h1 id="webhook" tabindex="-1"><a class="header-anchor" href="#webhook"><span>Webhook</span></a></h1><p>The Webhook node outputs data received from a created webhook in Home Assistant. Webhooks are a way to receive data or trigger automations from external sources, and this node allows you to integrate those triggers into your Node-RED flows.</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p><em>Needs <a href="https://github.com/zachowj/hass-node-red" target="_blank" rel="noopener noreferrer">Custom Integration</a> installed in Home Assistant for this node to function</em></p></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2>',4)),o("h3",c,[o("a",u,[o("span",null,[e[0]||(e[0]=t("ID ",-1)),n(s,{text:"required"})])])]),e[3]||(e[3]=o("ul",null,[o("li",null,[t("Type: "),o("code",null,"string")])],-1)),e[4]||(e[4]=o("p",null,"A string to be used for the webhook URL in Home Assistant.",-1)),o("h3",p,[o("a",m,[o("span",null,[e[1]||(e[1]=t("Allowed Methods ",-1)),n(s,{text:"required"})])])]),e[5]||(e[5]=i('<ul><li>Type: <code>list</code></li></ul><p>A list of allowed methods that Home Assistant will accept for the webhook. At least one method must be selected.</p><h3 id="expose-as" tabindex="-1"><a class="header-anchor" href="#expose-as"><span>Expose as</span></a></h3><ul><li>Type: <code>string</code></li></ul><p>When an entity is selected a switch entity will be created in Home Assistant. Turning on and off this switch will disable/enable the nodes in Node-RED.</p><h2 id="outputs" tabindex="-1"><a class="header-anchor" href="#outputs"><span>Outputs</span></a></h2><p>Value types:</p><ul><li><code>received data</code>: The parsed body from the webhook request</li><li><code>trigger id</code>: webhook id</li><li><code>headers</code>: entity state of the triggered entity</li><li><code>params</code>: Query string parameters</li><li><code>config</code>: config properties of the node</li></ul>',8))])}const w=a(h,[["render",f],["__file","webhook.html.vue"]]),k=JSON.parse('{"path":"/node/webhook.html","title":"Webhook","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[{"level":3,"title":"ID","slug":"id","link":"#id","children":[]},{"level":3,"title":"Allowed Methods","slug":"allowed-methods","link":"#allowed-methods","children":[]},{"level":3,"title":"Expose as","slug":"expose-as","link":"#expose-as","children":[]}]},{"level":2,"title":"Outputs","slug":"outputs","link":"#outputs","children":[]}],"git":{"updatedTime":1723606857000,"contributors":[{"name":"Jason","email":"37859597+zachowj@users.noreply.github.com","commits":7}]},"filePathRelative":"node/webhook.md"}');export{w as comp,k as data};
