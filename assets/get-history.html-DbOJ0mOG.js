import{_ as n,c as t,b as l,a as s,d as o,w as p,r as i,o as r,e as c}from"./app-CrEJ5uQ_.js";const u={};function d(h,a){const e=i("RouteLink");return r(),t("div",null,[a[1]||(a[1]=l(`<h1 id="get-history" tabindex="-1"><a class="header-anchor" href="#get-history"><span>Get History</span></a></h1><p>The Get History node fetches the history of Home Assistant entities based on input criteria. This can be used to analyze past states or events, such as tracking temperature changes over time or reviewing when a door was last opened. Itâ€™s useful for creating more complex automations based on historical data.</p><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2><h3 id="entity-id" tabindex="-1"><a class="header-anchor" href="#entity-id"><span>Entity ID</span></a></h3><ul><li>Type: <code>string</code></li></ul><p>The entity id to fetch history for. Can be a single entity id or a comma separated list of entity ids.</p><h3 id="entity-id-type" tabindex="-1"><a class="header-anchor" href="#entity-id-type"><span>Entity ID Type</span></a></h3><ul><li>Type: <code>string</code></li><li>Values: <code>==</code> | <code>regex</code></li></ul><p>The type of entity id matching to use. <code>==</code> will do an exact match, <code>regex</code> will use a regular expression to match the entity ids.</p><h3 id="start-date" tabindex="-1"><a class="header-anchor" href="#start-date"><span>Start Date</span></a></h3><ul><li>Type: <code>string</code></li><li>Values: ISO Formattted Date</li><li>Default: 24 hours prior</li></ul><p>Date to start fetching history from. Will override the configuration if passed in. If <code>relativetime</code> is used this will be ignored.</p><p><strong>Also See:</strong></p><ul><li><a href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/ISO_8601</a></li></ul><h3 id="end-date" tabindex="-1"><a class="header-anchor" href="#end-date"><span>End Date</span></a></h3><ul><li>Type: <code>string</code></li><li>Values: ISO Formattted Date</li><li>Default: 24 hours from start date</li></ul><p>The end date to fetch history too. Will override the configuration if passed in. If <code>relativetime</code> is used this will be ignored.</p><p><strong>Also See:</strong></p><ul><li><a href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/ISO_8601</a></li></ul><h3 id="use-relative-time" tabindex="-1"><a class="header-anchor" href="#use-relative-time"><span>Use Relative Time</span></a></h3><ul><li>Type: <code>boolean</code></li></ul><p>A checkbox to use relative time or not. If checked the <code>startdate</code> and <code>enddate</code> will be ignored and the <code>relativetime</code> will be used instead.</p><h3 id="in-the-last" tabindex="-1"><a class="header-anchor" href="#in-the-last"><span>In the Last</span></a></h3><ul><li>Type: <code>string</code></li></ul><p>A time string that will be parsed the following keywords into time values.</p><p>Example: <code>4h 30m</code> = The last 4 hours and 30 minutes</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">ms, milli, millisecond, milliseconds - will parse to milliseconds</span>
<span class="line">s, sec, secs, second, seconds - will parse to seconds</span>
<span class="line">m, min, mins, minute, minutes - will parse to minutes</span>
<span class="line">h, hr, hrs, hour, hours - will parse to hours</span>
<span class="line">d, day, days - will parse to days</span>
<span class="line">w, week, weeks - will parse to weeks</span>
<span class="line">mon, mth, mths, month, months - will parse to months</span>
<span class="line">y, yr, yrs, year, years - will parse to years</span>
<span class="line"></span></code></pre></div><h3 id="flatten-results" tabindex="-1"><a class="header-anchor" href="#flatten-results"><span>Flatten Results</span></a></h3><p>Instead of returning the data from home assistant ( array for each entity_id ) return one flattened array of one item per history entry</p><h3 id="output-types" tabindex="-1"><a class="header-anchor" href="#output-types"><span>Output Types</span></a></h3><ul><li>Type: <code>string</code></li><li>Values: <code>array</code> | <code>split</code></li><li>Default: <code>array</code></li></ul><p>The type of output to return. <code>array</code> will return an array of history objects. <code>split</code> will return an array of history objects for each entity id.</p><h2 id="inputs" tabindex="-1"><a class="header-anchor" href="#inputs"><span>Inputs</span></a></h2><p>All properties of <code>msg.payload</code></p><h3 id="entityid" tabindex="-1"><a class="header-anchor" href="#entityid"><span>entityId</span></a></h3><ul><li>Type: <code>string</code></li></ul><h3 id="entityidtype" tabindex="-1"><a class="header-anchor" href="#entityidtype"><span>entityIdType</span></a></h3><ul><li>Type: <code>equal</code> | <code>regex</code></li></ul><h3 id="startdate" tabindex="-1"><a class="header-anchor" href="#startdate"><span>startDate</span></a></h3><ul><li>Type: <code>string</code></li><li>Values: ISO Formattted Date</li></ul><h3 id="enddate" tabindex="-1"><a class="header-anchor" href="#enddate"><span>endDate</span></a></h3><ul><li>Type: <code>string</code></li><li>Values: ISO Formattted Date</li></ul><h3 id="relativetime" tabindex="-1"><a class="header-anchor" href="#relativetime"><span>relativeTime</span></a></h3><ul><li>Type: <code>string</code></li></ul><h3 id="flatten" tabindex="-1"><a class="header-anchor" href="#flatten"><span>flatten</span></a></h3><ul><li>Type: <code>boolean</code></li></ul><h2 id="outputs" tabindex="-1"><a class="header-anchor" href="#outputs"><span>Outputs</span></a></h2><h3 id="payload" tabindex="-1"><a class="header-anchor" href="#payload"><span>payload</span></a></h3><ul><li>Type: <code>array</code></li></ul><p>The history returned by home-assistant, which is an array of arrays where each array entry contains history objects for one particular entity</p><p>Example output of <code>msg</code>:</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;payload&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;attributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;friendly_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Kitchen Light&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mdi:light-switch&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;context&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;850e510e36fb494c9abc79e01e897d54&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;parent_id&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;user_id&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;entity_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light.kitchen_light&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;last_changed&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2019-12-28T06:47:28.618000+00:00&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;last_updated&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2019-12-28T06:47:28.618000+00:00&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;state&quot;</span><span class="token operator">:</span> <span class="token string">&quot;off&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;attributes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;brightness&quot;</span><span class="token operator">:</span> <span class="token number">28</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;friendly_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Kitchen Light&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mdi:light-switch&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;context&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4d4abe29f2bc43dab39101193f1fefe4&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;parent_id&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;user_id&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;entity_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;light.kitchen_light&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;last_changed&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2019-12-28T07:48:11.514137+00:00&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;last_updated&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2019-12-28T07:48:11.514137+00:00&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;state&quot;</span><span class="token operator">:</span> <span class="token string">&quot;on&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    ...</span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h2>`,53)),s("p",null,[o(e,{to:"/cookbook/check-if-an-entity-was-turned-on-in-the-last-24-hours.html"},{default:p(()=>[...a[0]||(a[0]=[c("Check if an entity was a certain state in the last 24 hours",-1)])]),_:1})]),a[2]||(a[2]=s("h2",{id:"references",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#references"},[s("span",null,"References")])],-1)),a[3]||(a[3]=s("ul",null,[s("li",null,[s("a",{href:"https://www.home-assistant.io/integrations/history",target:"_blank",rel:"noopener noreferrer"},"Home Assistant History Component")]),s("li",null,[s("a",{href:"https://developers.home-assistant.io/docs/en/external_api_rest.html#get-apihistoryperiodlttimestamp",target:"_blank",rel:"noopener noreferrer"},"Home Assistant API: /api/history/period")])],-1))])}const y=n(u,[["render",d],["__file","get-history.html.vue"]]),g=JSON.parse('{"path":"/node/get-history.html","title":"Get History","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[{"level":3,"title":"Entity ID","slug":"entity-id","link":"#entity-id","children":[]},{"level":3,"title":"Entity ID Type","slug":"entity-id-type","link":"#entity-id-type","children":[]},{"level":3,"title":"Start Date","slug":"start-date","link":"#start-date","children":[]},{"level":3,"title":"End Date","slug":"end-date","link":"#end-date","children":[]},{"level":3,"title":"Use Relative Time","slug":"use-relative-time","link":"#use-relative-time","children":[]},{"level":3,"title":"In the Last","slug":"in-the-last","link":"#in-the-last","children":[]},{"level":3,"title":"Flatten Results","slug":"flatten-results","link":"#flatten-results","children":[]},{"level":3,"title":"Output Types","slug":"output-types","link":"#output-types","children":[]}]},{"level":2,"title":"Inputs","slug":"inputs","link":"#inputs","children":[{"level":3,"title":"entityId","slug":"entityid","link":"#entityid","children":[]},{"level":3,"title":"entityIdType","slug":"entityidtype","link":"#entityidtype","children":[]},{"level":3,"title":"startDate","slug":"startdate","link":"#startdate","children":[]},{"level":3,"title":"endDate","slug":"enddate","link":"#enddate","children":[]},{"level":3,"title":"relativeTime","slug":"relativetime","link":"#relativetime","children":[]},{"level":3,"title":"flatten","slug":"flatten","link":"#flatten","children":[]}]},{"level":2,"title":"Outputs","slug":"outputs","link":"#outputs","children":[{"level":3,"title":"payload","slug":"payload","link":"#payload","children":[]}]},{"level":2,"title":"Examples","slug":"examples","link":"#examples","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{"updatedTime":1723606857000,"contributors":[{"name":"Jason","email":"37859597+zachowj@users.noreply.github.com","commits":6}]},"filePathRelative":"node/get-history.md"}');export{y as comp,g as data};
