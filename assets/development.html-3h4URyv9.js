import{_ as n,c as t,b as a,o as s}from"./app-CrEJ5uQ_.js";const o={};function l(i,e){return s(),t("div",null,[...e[0]||(e[0]=[a(`<h1 id="development" tabindex="-1"><a class="header-anchor" href="#development"><span>Development</span></a></h1><p>For detailed contributing guidelines, refer to <a href="https://github.com/zachowj/node-red-contrib-home-assistant-websocket/blob/main/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">CONTRIBUTING.md</a>.</p><h2 id="environment-setup" tabindex="-1"><a class="header-anchor" href="#environment-setup"><span>Environment Setup</span></a></h2><p>Follow these steps to set up your development environment for contributing to this project:</p><h3 id="using-the-vs-code-dev-container" tabindex="-1"><a class="header-anchor" href="#using-the-vs-code-dev-container"><span>Using the VS Code Dev Container</span></a></h3><p>This method sets up a Docker container with all required tools and dependencies.</p><ol><li><p>Fork the <a href="https://github.com/zachowj/node-red-contrib-home-assistant-websocket" target="_blank" rel="noopener noreferrer">Node-RED Home Assistant repository</a>.</p></li><li><p>Clone your forked repository:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> clone https://github.com/<span class="token operator">&lt;</span>GITHUB_USER_NAME<span class="token operator">&gt;</span>/node-red-contrib-home-assistant-websocket</span>
<span class="line"></span></code></pre></div></li><li><p>Open the project in VS Code.</p></li><li><p>Install the <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers" target="_blank" rel="noopener noreferrer">Remote - Containers</a> extension.</p></li><li><p>Click the green button in the lower-left corner labeled &quot;Reopen in Container.&quot;</p></li><li><p>Wait for the container to build and start.</p></li><li><p>Open a terminal in VS Code and run <code>pnpm dev</code> to start the development server.</p></li></ol><h3 id="local-setup" tabindex="-1"><a class="header-anchor" href="#local-setup"><span>Local Setup</span></a></h3><ol><li><p><strong>Fork the Repository:</strong></p><ul><li>Begin by forking the <a href="https://github.com/zachowj/node-red-contrib-home-assistant-websocket" target="_blank" rel="noopener noreferrer">Node-RED Home Assistant repository</a> to your GitHub account.</li></ul></li><li><p><strong>Clone Your Forked Repository:</strong></p><ul><li><p>Clone the forked repository to your local machine:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> clone https://github.com/<span class="token operator">&lt;</span>GITHUB_USER_NAME<span class="token operator">&gt;</span>/node-red-contrib-home-assistant-websocket</span>
<span class="line"></span></code></pre></div></li></ul></li><li><p><strong>Navigate to the Project Directory:</strong></p><ul><li><p>Change to the projectâ€™s root directory:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> node-red-contrib-home-assistant-websocket</span>
<span class="line"></span></code></pre></div></li></ul></li><li><p><strong>Setup the Environment:</strong></p><ul><li>You can either run the setup script or manually configure the environment:</li></ul><p><strong>Option A: Run the Setup Script</strong></p><ul><li><p>Execute the provided setup script to automate the environment configuration:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./scripts/setup.sh</span>
<span class="line"></span></code></pre></div></li></ul><p><strong>Option B: Manual Setup</strong></p><ul><li><p>Alternatively, you can manually create a <code>.node-red</code> directory and link <code>pnpm</code>:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> .node-red</span>
<span class="line">corepack <span class="token builtin class-name">enable</span> <span class="token operator">&amp;&amp;</span> corepack <span class="token builtin class-name">enable</span> <span class="token function">pnpm</span></span>
<span class="line"><span class="token function">pnpm</span> <span class="token function">link</span> <span class="token parameter variable">--dir</span> .node-red</span>
<span class="line"></span></code></pre></div></li></ul></li><li><p><strong>Start Node-RED:</strong></p><ul><li><p>Launch Node-RED in development mode:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">pnpm</span> dev</span>
<span class="line"></span></code></pre></div></li></ul></li></ol><h3 id="accessing-the-development-server" tabindex="-1"><a class="header-anchor" href="#accessing-the-development-server"><span>Accessing the Development Server</span></a></h3><p>After running <code>pnpm dev</code>, Node-RED will be available on ports 1880 and 3000. Access the development server at:</p><ul><li><a href="http://localhost:1880" target="_blank" rel="noopener noreferrer">http://localhost:1880</a></li><li><a href="http://localhost:3000" target="_blank" rel="noopener noreferrer">http://localhost:3000</a></li></ul><p>Port 3000 includes browser-sync, which will automatically reload the browser when changes are made to the editor source code.</p><h3 id="linting" tabindex="-1"><a class="header-anchor" href="#linting"><span>Linting</span></a></h3><p>This project uses <a href="https://eslint.org/" target="_blank" rel="noopener noreferrer">ESLint</a> and <a href="https://prettier.io/" target="_blank" rel="noopener noreferrer">Prettier</a> for code linting and formatting. Run the following command to lint the code:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">pnpm</span> lint</span>
<span class="line"></span></code></pre></div><h3 id="testing" tabindex="-1"><a class="header-anchor" href="#testing"><span>Testing</span></a></h3><p>To run the tests, use:</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">pnpm</span> <span class="token builtin class-name">test</span></span>
<span class="line"></span></code></pre></div>`,19)])])}const p=n(o,[["render",l],["__file","development.html.vue"]]),c=JSON.parse('{"path":"/guide/development.html","title":"Development","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Environment Setup","slug":"environment-setup","link":"#environment-setup","children":[{"level":3,"title":"Using the VS Code Dev Container","slug":"using-the-vs-code-dev-container","link":"#using-the-vs-code-dev-container","children":[]},{"level":3,"title":"Local Setup","slug":"local-setup","link":"#local-setup","children":[]},{"level":3,"title":"Accessing the Development Server","slug":"accessing-the-development-server","link":"#accessing-the-development-server","children":[]},{"level":3,"title":"Linting","slug":"linting","link":"#linting","children":[]},{"level":3,"title":"Testing","slug":"testing","link":"#testing","children":[]}]}],"git":{"updatedTime":1758591057000,"contributors":[{"name":"Jason","email":"37859597+zachowj@users.noreply.github.com","commits":4},{"name":"jason","email":"37859597+zachowj@users.noreply.github.com","commits":2}]},"filePathRelative":"guide/development.md"}');export{p as comp,c as data};
