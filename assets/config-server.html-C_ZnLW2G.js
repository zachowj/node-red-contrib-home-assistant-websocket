import{_ as a,c as t,b as s,o as n}from"./app-CrEJ5uQ_.js";const o={};function i(l,e){return n(),t("div",null,[...e[0]||(e[0]=[s(`<h1 id="server-config" tabindex="-1"><a class="header-anchor" href="#server-config"><span>Server Config</span></a></h1><p>The Server Config node is used for configuring the connection to Home Assistant. This node manages the details of how Node-RED communicates with your Home Assistant instance, including server URL, authentication, and other connection settings.</p><h2 id="config" tabindex="-1"><a class="header-anchor" href="#config"><span>Config</span></a></h2><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>Name</span></a></h3><ul><li>Type: <code>string</code></li></ul><p>Label for this configuration, see details below for implications</p><h3 id="using-the-home-assistant-add-on" tabindex="-1"><a class="header-anchor" href="#using-the-home-assistant-add-on"><span>Using the Home Assistant Add-on</span></a></h3><ul><li>Type: <code>boolean</code></li></ul><p>If you&#39;re running Node-RED as a Hass.io Add-on check this. No other information is needed.</p><h3 id="base-url" tabindex="-1"><a class="header-anchor" href="#base-url"><span>Base URL</span></a></h3><ul><li>Type: <code>string</code></li></ul><p>The base URL and port of the Home Assistant instance can be reached at, for example: <code>http://192.168.0.100:8123</code> or <code>https://homeassistant.mysite.com</code></p><h3 id="access-token" tabindex="-1"><a class="header-anchor" href="#access-token"><span>Access Token</span></a></h3><ul><li>Type: <code>string</code></li></ul><p>Long-lived Access Token used to contact the API</p><h3 id="unauthorized-ssl-certificates" tabindex="-1"><a class="header-anchor" href="#unauthorized-ssl-certificates"><span>Unauthorized SSL Certificates</span></a></h3><ul><li>Type: <code>boolean</code></li></ul><p>This will allow you to use self-signed certificates. Only use this if you know what you&#39;re doing.</p><h3 id="state-boolean" tabindex="-1"><a class="header-anchor" href="#state-boolean"><span>State Boolean</span></a></h3><ul><li>Type: <code>string | delimited</code></li></ul><p>A list of strings, not case sensitive, delimited by vertical pipe, |, that will return true for State Type Boolean.</p><h3 id="enable-heartbeat" tabindex="-1"><a class="header-anchor" href="#enable-heartbeat"><span>Enable Heartbeat</span></a></h3><ul><li>Type: <code>boolean</code></li></ul><p>Heartbeat will send a ping message using the websocket connection to Home Assistant every X seconds. If a pong response is not received within 5 seconds Node-RED will attempt to reconnect to Home Assistant.</p><h3 id="heartbeat-interval" tabindex="-1"><a class="header-anchor" href="#heartbeat-interval"><span>Heartbeat Interval</span></a></h3><ul><li>Type: <code>number</code></li></ul><p>The interval at which the ping message is sent to Home Assistant. The minimum value is 10 seconds.</p><h3 id="enable-global-context-store" tabindex="-1"><a class="header-anchor" href="#enable-global-context-store"><span>Enable Global Context Store</span></a></h3><ul><li>Type: <code>boolean</code></li></ul><p>If enabled, the global context store will be used to store the Home Assistant connection, state, and service information. This allows you to use the information in other nodes using context functions.</p><p>Example below</p><h2 id="ui-settings" tabindex="-1"><a class="header-anchor" href="#ui-settings"><span>UI Settings</span></a></h2><h3 id="cache-autocomplete-results" tabindex="-1"><a class="header-anchor" href="#cache-autocomplete-results"><span>Cache Autocomplete Results</span></a></h3><p>Enables the caching of the JSON autocomplete requests. Enabling or disabling this may require a restart of Node-RED for it to take effect.</p><h3 id="id-selector-display" tabindex="-1"><a class="header-anchor" href="#id-selector-display"><span>ID Selector Display</span></a></h3><p>Which text to show in the selector after the id has been chosen.</p><h3 id="status-date-format" tabindex="-1"><a class="header-anchor" href="#status-date-format"><span>Status Date Format</span></a></h3><h4 id="separator" tabindex="-1"><a class="header-anchor" href="#separator"><span>Separator</span></a></h4><p>A string that will appear in the status of an event node between the state and date string.</p><h4 id="other-options" tabindex="-1"><a class="header-anchor" href="#other-options"><span>Other options</span></a></h4><p>The other options are directly from <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#options" target="_blank" rel="noopener noreferrer">DateTimeFormat Options</a>.</p><h2 id="details" tabindex="-1"><a class="header-anchor" href="#details"><span>Details</span></a></h2><p>Every node requires a configuration attached to define how to contact Home Assistant, which is this config node&#39;s main purpose.</p><h3 id="context" tabindex="-1"><a class="header-anchor" href="#context"><span>Context</span></a></h3><p>Each config node will also make some data available in the global context, the <code>Name</code> value in this node is used as, camelcase, and the namespace for those values</p><p>Currently <code>states</code>, <code>services</code>, and <code>events</code> is made available in the global context. <code>states</code> is always set to all available states at startup and updated whenever state changes occur so it should be always up to date. <code>services</code> and <code>events</code> is only updated on initial deploy.</p><h3 id="context-example" tabindex="-1"><a class="header-anchor" href="#context-example"><span>Context Example</span></a></h3><p>Say we have a config node with the name <code>Home Assistant</code>, with an entity set up in Home Assistant as <code>switch.my_switch</code>. This state would be available within function nodes and you could fetch using something like the below code</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> haCtx <span class="token operator">=</span> global<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;homeassistant&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> configCtx <span class="token operator">=</span> haCtx<span class="token punctuation">.</span>homeAssistant<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> entityState <span class="token operator">=</span> configCtx<span class="token punctuation">.</span>states<span class="token punctuation">[</span><span class="token string">&quot;switch.my_switch&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">return</span> entityState<span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&quot;on&quot;</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h2 id="connection-issues" tabindex="-1"><a class="header-anchor" href="#connection-issues"><span>Connection Issues</span></a></h2><p>Communication with Home Assistant is accomplished via a combination of WebSocket and the REST API if you are having trouble communicating with home assistant make sure you can access the API outside of node-red, but from the same server node-red is running on, using a REST client, curl, or any number of other methods to validate the connection</p><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references"><span>References</span></a></h2><p><a href="https://home-assistant.io/developers/rest_api" target="_blank" rel="noopener noreferrer">Home Assistant REST API</a></p>`,53)])])}const r=a(o,[["render",i],["__file","config-server.html.vue"]]),h=JSON.parse('{"path":"/node/config-server.html","title":"Server Config","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Config","slug":"config","link":"#config","children":[{"level":3,"title":"Name","slug":"name","link":"#name","children":[]},{"level":3,"title":"Using the Home Assistant Add-on","slug":"using-the-home-assistant-add-on","link":"#using-the-home-assistant-add-on","children":[]},{"level":3,"title":"Base URL","slug":"base-url","link":"#base-url","children":[]},{"level":3,"title":"Access Token","slug":"access-token","link":"#access-token","children":[]},{"level":3,"title":"Unauthorized SSL Certificates","slug":"unauthorized-ssl-certificates","link":"#unauthorized-ssl-certificates","children":[]},{"level":3,"title":"State Boolean","slug":"state-boolean","link":"#state-boolean","children":[]},{"level":3,"title":"Enable Heartbeat","slug":"enable-heartbeat","link":"#enable-heartbeat","children":[]},{"level":3,"title":"Heartbeat Interval","slug":"heartbeat-interval","link":"#heartbeat-interval","children":[]},{"level":3,"title":"Enable Global Context Store","slug":"enable-global-context-store","link":"#enable-global-context-store","children":[]}]},{"level":2,"title":"UI Settings","slug":"ui-settings","link":"#ui-settings","children":[{"level":3,"title":"Cache Autocomplete Results","slug":"cache-autocomplete-results","link":"#cache-autocomplete-results","children":[]},{"level":3,"title":"ID Selector Display","slug":"id-selector-display","link":"#id-selector-display","children":[]},{"level":3,"title":"Status Date Format","slug":"status-date-format","link":"#status-date-format","children":[]}]},{"level":2,"title":"Details","slug":"details","link":"#details","children":[{"level":3,"title":"Context","slug":"context","link":"#context","children":[]},{"level":3,"title":"Context Example","slug":"context-example","link":"#context-example","children":[]}]},{"level":2,"title":"Connection Issues","slug":"connection-issues","link":"#connection-issues","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]}],"git":{"updatedTime":1723606857000,"contributors":[{"name":"Jason","email":"37859597+zachowj@users.noreply.github.com","commits":11}]},"filePathRelative":"node/config-server.md"}');export{r as comp,h as data};
